[{"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\index.tsx":"1","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\App.tsx":"3","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\publicity\\SocialNetwork.tsx":"4","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\title\\Title.tsx":"5","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\Separator.js":"6","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\css\\color.js":"7","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\solution\\Solution.tsx":"8","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\http\\messagesClient.ts":"9","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\util\\configuration.js":"10","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\UseModal.tsx":"11","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\ModalDiv.tsx":"12","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\SymbolButton.tsx":"13","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\ModalContent.tsx":"14","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\model\\Excuse.ts":"15","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\FadIn.tsx":"16","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\useInterval.js":"17","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\Background.tsx":"18","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\router\\LostRouter.js":"19","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\LostDiv.tsx":"20","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\view\\Home.tsx":"21","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\util\\util.tsx":"22","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\LostLink.tsx":"23"},{"size":821,"mtime":1642719247768,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1642585804575,"results":"26","hashOfConfig":"25"},{"size":131,"mtime":1642718956307,"results":"27","hashOfConfig":"25"},{"size":1388,"mtime":1642688173057,"results":"28","hashOfConfig":"25"},{"size":511,"mtime":1642720765212,"results":"29","hashOfConfig":"25"},{"size":291,"mtime":1642622806538,"results":"30","hashOfConfig":"25"},{"size":107,"mtime":1642623393145,"results":"31","hashOfConfig":"25"},{"size":2402,"mtime":1642722353966,"results":"32","hashOfConfig":"25"},{"size":1011,"mtime":1642590995263,"results":"33","hashOfConfig":"25"},{"size":90,"mtime":1642092162592,"results":"34","hashOfConfig":"25"},{"size":250,"mtime":1642676482538,"results":"35","hashOfConfig":"25"},{"size":2593,"mtime":1642680299559,"results":"36","hashOfConfig":"25"},{"size":722,"mtime":1642677404148,"results":"37","hashOfConfig":"25"},{"size":6399,"mtime":1642719405754,"results":"38","hashOfConfig":"25"},{"size":266,"mtime":1642689710358,"results":"39","hashOfConfig":"25"},{"size":575,"mtime":1642720600811,"results":"40","hashOfConfig":"25"},{"size":488,"mtime":1642696205996,"results":"41","hashOfConfig":"25"},{"size":588,"mtime":1642697801213,"results":"42","hashOfConfig":"25"},{"size":168,"mtime":1642718449805,"results":"43","hashOfConfig":"25"},{"size":1159,"mtime":1642721409959,"results":"44","hashOfConfig":"25"},{"size":2796,"mtime":1642722808969,"results":"45","hashOfConfig":"25"},{"size":97,"mtime":1642720096249,"results":"46","hashOfConfig":"25"},{"size":363,"mtime":1642722787775,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1a0cg9b",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\index.tsx",[],["103","104"],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\reportWebVitals.ts",[],["105","106"],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\App.tsx",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\publicity\\SocialNetwork.tsx",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\title\\Title.tsx",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\Separator.js",[],["107","108"],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\css\\color.js",[],["109","110"],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\solution\\Solution.tsx",["111","112","113"],"import classNames from \"classnames\";\r\nimport {SymbolButton} from \"../SymbolButton\";\r\nimport {ModalDiv} from \"../ModalDiv\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport './Solution.css'\r\nimport {getExcuses} from \"../../http/messagesClient\";\r\nimport startup from \"../../images/startup.svg\"\r\nimport {useModal} from \"../UseModal\";\r\nimport ModalContent from \"../optionnal/ModalContent\";\r\nimport {Excuse} from \"../../model/Excuse\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {backGroundColor} from \"../../css/color\";\r\nimport {timeout} from \"../../util/util\";\r\n\r\nexport function Solution() {\r\n\r\n    const [phrases, setPhrases] = useState<Excuse[]>([]);\r\n    const [random, setRandom] = useState(\"********************\");\r\n    const {isShowing, toggle} = useModal();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getExcuses().then(response => {\r\n            setPhrases(response);\r\n        })\r\n    }, []);\r\n\r\n    function rand(min: number, max: number): number {\r\n        return min + Math.floor(Math.random() * (max - min));\r\n    }\r\n\r\n    async function setRandomPhrase() {\r\n        setLoading(true)\r\n        await timeout(rand(1, 5) * 1000);\r\n        setLoading(false)\r\n        setRandom(phrases[rand(0, phrases.length - 1)].message)\r\n    }\r\n\r\n    return <div className={classNames('flex', 'flex-column', 'symbol-solution-div')} style={{marginBottom: \"10%\"}} id=\"solution\">\r\n        <div><h6 style={{color: 'rgb(194,194,194)'}}>Ma super solution</h6>\r\n            <img\r\n                className={classNames({'img-super': loading})}\r\n                src={startup}/>\r\n        </div>\r\n\r\n        <div className={classNames('flex', 'flex-row')} style={{justifyContent: \"center\"}}>\r\n             <i className=\"fa fa-random\" style={{color: \"black\", marginBottom: 'auto', marginTop: 'auto', marginRight: '10px'}}/>\r\n            <p style={{color: '#2a3b4e', fontSize: '18px'}}>{random}</p>\r\n        </div>\r\n        <div>\r\n            <SymbolButton className={classNames({'inactive':loading})} color=\"#006eb3\" onClick={() => setRandomPhrase()}>Random</SymbolButton>\r\n            <SymbolButton color=\"hsl(206,100%,52%)\" onClick={() => toggle()}>Ajouter</SymbolButton>\r\n            <ModalDiv content={<ModalContent setPhrases={setPhrases} hide={toggle}/>} isShowing={isShowing}\r\n                      hide={toggle}/>\r\n        </div>\r\n    </div>\r\n}","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\http\\messagesClient.ts",["114"],"import {config} from \"../util/configuration\";\r\nimport {Excuse} from \"../model/Excuse\";\r\nimport {stringify} from \"querystring\";\r\n\r\nexport async function getExcuses(){\r\n  return await fetch(`${config.url.API_URL}/excuses`, {\r\n    method: \"GET\",\r\n  })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      return response\r\n    });\r\n}\r\n\r\nexport async function addExcuse(excuse : Excuse){\r\n  if(excuse == null ) return Promise.reject(\"excuse is null\")\r\n  if(excuse.tag == null) return Promise.reject(\"excuse.tag is null\")\r\n  if(excuse.message == null) return Promise.reject(\"message is null\")\r\n  if(excuse.http_code == null) return Promise.reject(\"excuse.http_code is null\")\r\n\r\n\r\n  return await fetch(`${config.url.API_URL}/excuses`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body:JSON.stringify(excuse)\r\n  })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      return response\r\n    });\r\n}","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\util\\configuration.js",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\UseModal.tsx",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\ModalDiv.tsx",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\SymbolButton.tsx",["115"],"import styled from \"styled-components\";\r\nimport {backGroundColor} from \"../css/color\";\r\n\r\nexport const SymbolButton = styled.button.attrs((props: {color: string}) => props)`\r\ncolor: #fff;\r\n    background-color:${(props) => props.color};\r\n    border-color: ${(props) => props.color};\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    font-weight: 400;\r\n    width:80%;\r\n    border: 1px solid transparent;\r\n    border-radius: 50rem !important;\r\n    transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;\r\n  &:hover,focus {\r\n    color: #fff;\r\n    background-color: #00568d;\r\n    border-color: #004f80;\r\n  }\r\n`","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\ModalContent.tsx",["116"],"import {SymbolButton} from \"../SymbolButton\";\r\nimport classNames from \"classnames\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport phrase from '../../images/phrase.jpg'\r\nimport styled from \"styled-components\";\r\nimport {Separator} from \"../Separator\";\r\nimport {addExcuse} from \"../../http/messagesClient\";\r\nimport {Excuse} from \"../../model/Excuse\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport './ModalContent.css'\r\n\r\nexport interface modalContentParameters {\r\n    setPhrases : (phrases: Excuse[]) => void,\r\n    hide: () => void\r\n}\r\ninterface IFormInput {\r\n    tag: string;\r\n    message: string;\r\n    http_code: string;\r\n}\r\n\r\nexport default function ModalContent({setPhrases,hide}:modalContentParameters) {\r\n\r\n    const {register, handleSubmit,watch, formState: { errors }} = useForm<IFormInput>();\r\n    const onSubmit = (data: IFormInput) => {savePhrase(data)};\r\n\r\n    function savePhrase(data: IFormInput) {\r\n        addExcuse(new Excuse(data.message, data.tag, data.http_code)).then(r  =>{\r\n            setPhrases(r)\r\n        })\r\n        hide()\r\n        alert(\"Nous avons ajouté la phrase suivante : \"+JSON.stringify(data))\r\n    }\r\n\r\n    return <div>\r\n        <PhraseImage/>\r\n        <div style={{padding: \"1rem\"}}>\r\n            <form className={classNames('flex', 'flex-column', 'justify-content-center', 'align-items-center')} onSubmit={handleSubmit(onSubmit)}>\r\n                <h3 style={{color: 'rgb(194,194,194)'}}>Ajouter une phrase</h3>\r\n                <Separator/>\r\n                <h6 style={{color: 'rgb(194,194,194)'}}>Celle ci sera directement ajouté à la liste des mots randoms\r\n                    ainsi que dans notre système d'information</h6>\r\n\r\n                <div className={classNames('flex', 'flex-column','align-items-start')}>\r\n                    <div className={classNames('flex', 'flex-row')} style={{justifyContent: \"center\", marginBottom: \"5%\"}}>\r\n                        <i className=\"fa fa-chevron-right fa-lg\"\r\n                           style={{color: \"black\", marginTop: 'auto', marginRight: '10px'}}/>\r\n                        <TextField\r\n                            type=\"text\"\r\n                            placeholder=\"than less 70\"\r\n                            {...register(\"message\", {\r\n                                required: \"This is required.\",\r\n                                maxLength: {\r\n                                    value: 70,\r\n                                    message: \"This input exceed maxLength.\"\r\n                                },\r\n                                pattern: /^[A-Za-z ]+$/i\r\n                            })}\r\n                            label={\"Phrase\"}/>\r\n                    </div>\r\n                    {errors?.message?.type === \"required\" && <p className=\"error\">This field is required</p>}\r\n                    {errors?.message?.type === \"maxLength\" && (<p className=\"error\">First name cannot exceed 20 characters</p>)}\r\n                    {errors?.message?.type === \"pattern\" && (<p className=\"error\">Alphabetical characters only</p>)}\r\n                </div>\r\n\r\n                <div className={classNames('flex', 'flex-column','align-items-start')}>\r\n                    <div className={classNames('flex', 'flex-row')} style={{justifyContent: \"center\", marginBottom: \"5%\"}}>\r\n                        <i className=\"fa fa-chevron-right fa-lg\"\r\n                           style={{color: \"black\", marginTop: 'auto', marginRight: '10px'}}/>\r\n                        <TextField\r\n                            {...register(\"tag\", {\r\n                                required: \"This is required.\",\r\n                                maxLength: {\r\n                                    value: 70,\r\n                                    message: \"This input exceed maxLength.\"\r\n                                },\r\n                                pattern: /^[A-Za-z ]+$/i\r\n                            })}\r\n                            type=\"text\"\r\n                            placeholder=\"than less 70\"\r\n                            label={\"Tag\"}/>\r\n                    </div>\r\n                    {errors?.tag?.type === \"required\" && <p className=\"error\">This field is required</p>}\r\n                    {errors?.tag?.type === \"maxLength\" && (<p className=\"error\">First name cannot exceed 20 characters</p>)}\r\n                    {errors?.tag?.type === \"pattern\" && (<p className=\"error\">Alphabetical characters only</p>)}\r\n                </div>\r\n\r\n                <div className={classNames('flex', 'flex-column','align-items-start')} style={{marginBottom: \"10%\"}}>\r\n                    <div className={classNames('flex', 'flex-row')} style={{justifyContent: \"center\", marginBottom: \"5%\"}}>\r\n                        <i className=\"fa fa-chevron-right fa-lg\"\r\n                           style={{color: \"black\", marginTop: 'auto', marginRight: '10px'}}/>\r\n                        <TextField\r\n                            {...register(\"http_code\", {\r\n                                required: \"This is required.\",\r\n                                min:0,\r\n                                max:1000\r\n                            })}\r\n                            type=\"number\"\r\n                            placeholder=\"only number, max 1000\"\r\n                            label={\"Http Code\"}/>\r\n                    </div>\r\n                    {errors?.http_code?.type === \"required\" && <p className=\"error\">This field is required</p>}\r\n                    {errors?.http_code?.type === \"min\" && (<p className=\"error\">code minimum is 0</p>)}\r\n                    {errors?.http_code?.type === \"max\" && (<p className=\"error\">code maximum is 1000</p>)}\r\n                </div>\r\n\r\n\r\n                <div style={{width: '50%'}}\r\n                     className={classNames('flex', 'flex-column', 'justify-content-center', 'align-items-center')}>\r\n                    <SymbolButton type='submit' color=\"#00C642\">\r\n                        Valider\r\n                    </SymbolButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport const PhraseImage = styled.div`\r\n      background-image: url(${phrase});\r\n      background-size: cover;\r\n      background-repeat: no-repeat;\r\n      box-shadow: rgb(0 0 0 / 40%) 0px 0px 16px 0px;\r\n      color: white;\r\n      width: 100%;\r\n      height:150px;\r\n      display: flex;\r\n      align-items: baseline;\r\n      color: white;\r\n      font-weight: bold; \r\n`","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\model\\Excuse.ts",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\FadIn.tsx",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\useInterval.js",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\Background.tsx",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\router\\LostRouter.js",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\LostDiv.tsx",["117"],"import styled from \"styled-components\";\r\nimport {Title} from \"../title/Title\";\r\nimport classNames from \"classnames\";\r\nimport {timeout} from \"../../util/util\";\r\nimport {useInterval} from \"./useInterval\";\r\nimport React, {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport const LostDiv = styled.div`\r\n      width: 100%;\r\n      z-index: 1000;\r\n      top:0;\r\n      height: 100%;\r\n      opacity: 1;\r\n      display: flex;\r\n      justify-content: center;\r\n      background-color: #2a3b4e;\r\n      color: #fff;\r\n      font-size:30px;\r\n      position:fixed;\r\n\r\n`\r\n\r\nexport function LostContent(){\r\n\r\n    const [loading,setLoading] = useState(0);\r\n    const navigate = useNavigate();\r\n\r\n    useInterval(() => {\r\n        setLoading(loading+500)\r\n        if(loading>=5000) navigate('/')\r\n    }, 500);\r\n\r\n    return <div style={{width:'100%'}} className={classNames('flex','flex-column','justify-content-center','align-items-center')}>\r\n        <Title value={'404 : You are lost ?'}/>\r\n        <CircularProgress style={{color: \"white\"}}\r\n                          size={60}/>\r\n    </div>\r\n}","C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\view\\Home.tsx",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\util\\util.tsx",[],"C:\\Users\\nom65\\IdeaProjects\\symbol-it-project\\frontend\\src\\component\\optionnal\\LostLink.tsx",["118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"121","replacedBy":"124"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"125"},{"ruleId":"121","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":11,"column":9,"nodeType":"129","messageId":"130","endLine":11,"endColumn":25},{"ruleId":"127","severity":1,"message":"131","line":12,"column":9,"nodeType":"129","messageId":"130","endLine":12,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":42,"column":13,"nodeType":"134","endLine":44,"endColumn":32},{"ruleId":"127","severity":1,"message":"135","line":3,"column":9,"nodeType":"129","messageId":"130","endLine":3,"endColumn":18},{"ruleId":"127","severity":1,"message":"131","line":2,"column":9,"nodeType":"129","messageId":"130","endLine":2,"endColumn":24},{"ruleId":"127","severity":1,"message":"136","line":24,"column":35,"nodeType":"129","messageId":"130","endLine":24,"endColumn":40},{"ruleId":"127","severity":1,"message":"137","line":4,"column":9,"nodeType":"129","messageId":"130","endLine":4,"endColumn":16},{"ruleId":"127","severity":1,"message":"138","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],["139"],["140"],"@typescript-eslint/no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'backGroundColor' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'stringify' is defined but never used.","'watch' is assigned a value but never used.","'timeout' is defined but never used.","'HashLink' is defined but never used.","no-global-assign","no-unsafe-negation"]