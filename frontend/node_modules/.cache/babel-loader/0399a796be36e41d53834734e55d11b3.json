{"ast":null,"code":"import { config } from \"../util/configuration\";\nexport async function getExcuses() {\n  return await fetch(`${config.url.API_URL}/excuses`, {\n    method: \"GET\"\n  }).then(response => response.json()).then(response => {\n    return response;\n  });\n}\nexport async function addExcuse(excuse) {\n  if (excuse == null) return Promise.reject(\"excuse is null\");\n  if (excuse.tag == null) return Promise.reject(\"excuse.tag is null\");\n  if (excuse.message == null) return Promise.reject(\"message is null\");\n  if (excuse.http_code == null) return Promise.reject(\"excuse.http_code is null\");\n  return await fetch(`${config.url.API_URL}/excuses`, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(excuse)\n  }).then(response => response.json()).then(response => {\n    return response;\n  });\n}","map":{"version":3,"sources":["C:/Users/nom65/IdeaProjects/symbol-it-project/frontend/src/http/messagesClient.ts"],"names":["config","getExcuses","fetch","url","API_URL","method","then","response","json","addExcuse","excuse","Promise","reject","tag","message","http_code","headers","body","JSON","stringify"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,uBAArB;AAIA,OAAO,eAAeC,UAAf,GAA2B;AAChC,SAAO,MAAMC,KAAK,CAAE,GAAEF,MAAM,CAACG,GAAP,CAAWC,OAAQ,UAAvB,EAAkC;AAClDC,IAAAA,MAAM,EAAE;AAD0C,GAAlC,CAAL,CAGVC,IAHU,CAGLC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHP,EAIVF,IAJU,CAILC,QAAQ,IAAI;AAChB,WAAOA,QAAP;AACD,GANU,CAAb;AAOD;AAED,OAAO,eAAeE,SAAf,CAAyBC,MAAzB,EAAyC;AAC9C,MAAGA,MAAM,IAAI,IAAb,EAAoB,OAAOC,OAAO,CAACC,MAAR,CAAe,gBAAf,CAAP;AACpB,MAAGF,MAAM,CAACG,GAAP,IAAc,IAAjB,EAAuB,OAAOF,OAAO,CAACC,MAAR,CAAe,oBAAf,CAAP;AACvB,MAAGF,MAAM,CAACI,OAAP,IAAkB,IAArB,EAA2B,OAAOH,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAP;AAC3B,MAAGF,MAAM,CAACK,SAAP,IAAoB,IAAvB,EAA6B,OAAOJ,OAAO,CAACC,MAAR,CAAe,0BAAf,CAAP;AAG7B,SAAO,MAAMV,KAAK,CAAE,GAAEF,MAAM,CAACG,GAAP,CAAWC,OAAQ,UAAvB,EAAkC;AAClDC,IAAAA,MAAM,EAAE,MAD0C;AAElDW,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFyC;AAMlDC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeT,MAAf;AAN6C,GAAlC,CAAL,CAQVJ,IARU,CAQLC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARP,EASVF,IATU,CASLC,QAAQ,IAAI;AAChB,WAAOA,QAAP;AACD,GAXU,CAAb;AAYD","sourcesContent":["import {config} from \"../util/configuration\";\r\nimport {Excuse} from \"../model/Excuse\";\r\nimport {stringify} from \"querystring\";\r\n\r\nexport async function getExcuses(){\r\n  return await fetch(`${config.url.API_URL}/excuses`, {\r\n    method: \"GET\",\r\n  })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      return response\r\n    });\r\n}\r\n\r\nexport async function addExcuse(excuse : Excuse){\r\n  if(excuse == null ) return Promise.reject(\"excuse is null\")\r\n  if(excuse.tag == null) return Promise.reject(\"excuse.tag is null\")\r\n  if(excuse.message == null) return Promise.reject(\"message is null\")\r\n  if(excuse.http_code == null) return Promise.reject(\"excuse.http_code is null\")\r\n\r\n\r\n  return await fetch(`${config.url.API_URL}/excuses`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body:JSON.stringify(excuse)\r\n  })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      return response\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}